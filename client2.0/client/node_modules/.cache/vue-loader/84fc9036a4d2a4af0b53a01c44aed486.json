{"remainingRequest":"E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Government\\client2.0\\client\\src\\views\\chart3bmap.vue?vue&type=style&index=0&id=25556969&scoped=true&lang=css&","dependencies":[{"path":"E:\\Government\\client2.0\\client\\src\\views\\chart3bmap.vue","mtime":1575564720575},{"path":"E:\\Government\\client2.0\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2VsZWN0LWJveHsKICBwb3NpdGlvbjphYnNvbHV0ZTsKICAvKmxlZnQ6ODBweDsqLwogIHRvcDo1NTBweDsKfQoK"},{"version":3,"sources":["chart3bmap.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgdA;AACA;AACA;AACA;AACA","file":"chart3bmap.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class='total'>\n    <div class=\"charts\">\n\n        <div id=\"chart3\" :style=\"{width:'1170px',height:'550px'}\"></div>\n      </div>\n    <div class=\"select-box\" :style=\"{width:'1170px',height:'100px'}\">\n    <span>时间范围选择: &#12288</span>\n    <span >\n      <span class=\"item\" >\n        <select v-model=\"formData1.year1\">\n          <option v-for=\"item in year1\" :value=\"item\">{{item}}年</option>\n        </select>\n      </span>\n      <span class=\"item\" @change=\"getDay1\">\n        <select  v-model=\"formData1.month1\">\n          <option v-for=\"item in month1\" :value=\"item\">{{item}}月</option>\n        </select>\n      </span>\n      <span class=\"item\">\n        <select  v-model=\"formData1.day1\" >\n          <option v-for=\"item in day1\" :value=\"item\">{{item}}日</option>\n        </select>\n      </span>\n    </span>\n     <span> —— </span>\n<!--    <div><a class=\"btn-submit btn-submit-s\" @click=\"submit\"></a></div>-->\n  <span>\n      <span class=\"item\">\n        <select v-model=\"formData2.year2\">\n          <option v-for=\"item in year2\" :value=\"item\">{{item}}年</option>\n        </select>\n      </span>\n      <span class=\"item\" @change=\"getDay2\">\n        <select  v-model=\"formData2.month2\">\n          <option v-for=\"item in month2\" :value=\"item\">{{item}}月</option>\n        </select>\n      </span>\n      <span class=\"item\">\n        <select  v-model=\"formData2.day2\" >\n          <option v-for=\"item in day2\" :value=\"item\">{{item}}日</option>\n        </select>f\n      </span>\n    </span>\n  <span>&#12288 &#12288</span>\n<!--    <el-botton @click=\"submit\" type=\"success\" size=\"mini\">提交</el-botton>-->\n    <input type='button' @click=\"submit\" style=\"width:40px;height:20px;border-radius:15%;border: solid 1px;background: #9e9e9e\" value=\"确定\">\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport bmap from 'echarts/extension/bmap/bmap.js'\nimport axios from 'axios';\nexport default {\n    data(){\n        return {\n            year1: [],\n            month1: [],\n            day1: [],\n            formData1: {\n                year1: 2018,\n                month1: 10,\n                day1: 30\n            },\n            year2: [],\n            month2: [],\n            day2: [],\n            formData2: {\n                year2: 2018,\n                month2: 10,\n                day2: 30\n            },\n            datalist: [],\n          days:[\"2018-10-30\",\"2018-10-30\",true],\n                intervalid:[],\n            }},\n        created(){\n            this.init();\n            this.getdata_chart3();\n            this.intervalid = setInterval(() => {\n          this.getdata_chart3()\n        }, 700);\n        },\n    beforeDestroy () {\n            //console.log(this.intervalid)\n      clearInterval(this.intervalid)\n    },\n    methods:{\n        init(){\n              this.getYear1();\n              this.getMonth1();\n              this.getDay1();\n              this.getYear2();\n              this.getMonth2();\n              this.getDay2();\n            },\n              getYear1(){//获取年\n                let date = new Date;\n                let current_year = date.getFullYear();\n                for (let i = 0; i < 10; i++) {\n                  let y = current_year - i;\n                this.year1.push(y);\n                }\n              },\n              getMonth1(){//获取月\n                for (let i = 1; i < 13; i++) {\n                this.month1.push(i);\n                }\n              },\n              getDay1(){//获取日\n                this.day1 = [];\n                let day = this.getDaysInMonth1(this.formData1.year1, this.formData1.month1)\n                for (let i = 1; i <= day ; i++) {\n                    this.day1.push(i);\n                }\n              },\n\n              getYear2(){//获取年\n                let date = new Date;\n                let current_year = date.getFullYear();\n                for (let i = 0; i < 10; i++) {\n                  let y = current_year - i;\n                this.year2.push(y);\n                }\n              },\n              getMonth2(){//获取月\n                for (let i = 1; i < 13; i++) {\n                this.month2.push(i);\n                }\n              },\n              getDay2(){//获取日\n                this.day2 = [];\n                let day = this.getDaysInMonth2(this.formData2.year2, this.formData2.month2)\n                for (let i = 1; i <= day ; i++) {\n                    this.day2.push(i);\n                }\n              },\n              getDaysInMonth1(year, month) {//获取某个月的天数\n                      month = parseInt(month, 10);\n                let d = new Date(year, month, 0);\n                return d.getDate();\n              },\n              getDaysInMonth2(year, month) {//获取某个月的天数\n                    month = parseInt(month, 10);\n              let d = new Date(year, month, 0);\n              return d.getDate();\n\n            },\n              padding0(num, length) {//数字前填充0方法\n               for(let len = (num + \"\").length; len < length; len = num.length) {\n                num = \"0\" + num;\n               }\n               return num;\n            },\n              submit(){//提交\n            let day1 = this.formData1.year1 +\"-\" + this.padding0(this.formData1.month1,2) +\"-\" + this.padding0(this.formData1.day1,2);\n            let day2 = this.formData2.year2 +\"-\" + this.padding0(this.formData2.month2,2) +\"-\" + this.padding0(this.formData2.day2,2);\n            let cur_date = new Date();\n            if(new Date(day1)>new Date(day2))\n            {\n                this.days = [day1,day2,false];\n                this.$message({\n                    message:\"请选择正确的年月日\",\n                    type:\"error\"\n                })\n                return;\n            }\n            else\n            {\n                this.days = [day1,day2,true];\n            }\n\n\n\n      },\n        getdata_chart3(){\n                let that = this;\n                let days = this.days;\n                if(days[2])\n                {\n                    axios.get('http://127.0.0.1:5000/api/getdata_chart3',{\n                        params: {\n                            day1:this.days[0],\n                            day2:this.days[1]}\n                    })\n                          .then(function(res){\n                           that.datalist = res;\n                           that.drawECharts();\n                           })\n\n                    //websocket\n        }},\n\n        drawECharts(){\n            var myChart = this.$echarts.init(document.getElementById('chart3'));\n            var option = {}\n           /* var data = [\n                    {name: '坪山社区', value: 41},\n                    {name: '和平社区', value: 31},\n                    {name: '金沙社区', value: 41},\n                    {name: '南布社区', value: 64},\n                    {name: '田心社区', value: 41},\n                    {name: '碧岭社区', value: 41},\n                    {name: '江岭社区', value: 41},\n                    {name: '金龟社区', value: 41},\n                    {name: '汤坑社区', value: 61},\n                    {name: '石井社区', value: 21},\n                    {name: '六和社区', value: 41},\n                    {name: '沙湖社区', value: 41},\n                    {name: '老坑社区', value: 36},\n                    {name: '竹坑社区', value: 41},\n                    {name: '秀新社区', value: 21},\n                    {name: '沙田社区', value: 41},\n                    {name: '六联社区', value: 78},\n                    {name: '坪环社区', value: 41},\n                    {name: '龙田社区', value: 41},\n                    {name: '坑梓社区', value: 41},\n                    {name: '田头社区', value: 41},\n                    {name: '马峦社区', value: 91},\n                    {name: '沙坣社区', value: 41},\n\n                ];*/\n            //let data=this.datalist;\n            var geoCoordMap = {\n                    '坪山社区':[114.352641,22.697439],\n                    '和平社区':[114.355104,22.697106],\n                    '金沙社区':[114.404081,22.758677],\n                    '南布社区':[114.375607,22.70534],\n                    '田心社区':[114.421943,22.700351],\n                    '碧岭社区':[114.295663,22.67342],\n                    '江岭社区':[114.362596,22.69202],\n                    '金龟社区':[114.406461,22.663744],\n                    '汤坑社区':[114.331079,22.678805],\n                    '石井社区':[113.803103,23.029933],\n                    '六和社区':[114.346675,22.711219],\n                    '沙湖社区':[114.326552,22.67909],\n                    '老坑社区':[114.369312,22.734866],\n                    '竹坑社区':[114.395074,22.715773],\n                    '秀新社区':[114.381223,22.746873],\n                    '沙田社区':[114.404444,22.761764],\n                    '六联社区':[114.332971,22.795219],\n                    '坪环社区':[114.35474,22.688096],\n                    '龙田社区':[114.372841,22.753346],\n                    '坑梓社区':[114.390013,22.753031],\n                    '田头社区':[114.410837,22.697197],\n                    '马峦社区':[114.338203,22.644538],\n                    '沙坣社区':[114.377888,22.690889],\n\n                };\n            var convertData = function (data) {\n                    var res = [];\n                    for (var i = 0; i < data.length; i++) {\n                        var geoCoord = geoCoordMap[data[i].name];\n                        if (geoCoord) {\n                            res.push({\n                                name: data[i].name,\n                                value: geoCoord.concat(data[i].value)\n                            });\n                        }\n                    }\n    return res;\n};\n            option={\n                title: {\n                    text: '深圳坪山热点社区地图',\n                    // subtext: 'data from PM25.in',\n                    // sublink: 'http://www.pm25.in',\n                    left: '10%',\n                    top:'10%',\n                    textStyle:{ //设置主标题风格\n                                  color:'#11203e',\n                                  fontSize: 20,\n                                  Height:50},//设置主标题字体颜色\n                },\n                tooltip : {\n                    trigger: 'item',\n                    formatter: function(params) {\n                var res = params.name+'<br/>';\n                var myseries = option.series;\n                for (var i = 0; i < 1; i++) {\n                    for(var j=0;j<myseries[i].data.length;j++){\n                        if(myseries[i].data[j].name==params.name){\n                            res+=myseries[i].name +' : '+myseries[i].data[j].value[2]+'</br>';\n                        }\n                    }\n                }\n                return res;\n            }\n                },\n                bmap: {\n                    center: [114.395074,22.715773], // 中心位置坐标\n                    zoom: 12.6, // 地图缩放比例\n                    roam: true, // 开启用户缩放\n                    mapStyle: {\n                        style:'light'\n                    /*styleJson: [\n                        {  //地图样试\n                                'featureType': 'water',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#d1d1d1'\n                                }\n                            }, {\n                                'featureType': 'land',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#f3f3f3'\n                                }\n                            }, {\n                                'featureType': 'railway',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'visibility': 'off'\n                                }\n                            }, {\n                                'featureType': 'highway',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#fdfdfd'\n                                }\n                            }, {\n                                'featureType': 'highway',\n                                'elementType': 'labels',\n                                'stylers': {\n                                    'visibility': 'off'\n                                }\n                            }, {\n                                'featureType': 'arterial',\n                                'elementType': 'geometry',\n                                'stylers': {\n                                    'color': '#fefefe'\n                                }\n                            }, {\n                                'featureType': 'arterial',\n                                'elementType': 'geometry.fill',\n                                'stylers': {\n                                    'color': '#fefefe'\n                                }\n                            }, {\n                                'featureType': 'poi',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'visibility': 'off'\n                                }\n                            }, {\n                                'featureType': 'green',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'visibility': 'off'\n                                }\n                            }, {\n                                'featureType': 'subway',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'visibility': 'off'\n                                }\n                            }, {\n                                'featureType': 'manmade',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#d1d1d1'\n                                }\n                            }, {\n                                'featureType': 'local',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#d1d1d1'\n                                }\n                            }, {\n                                'featureType': 'arterial',\n                                'elementType': 'labels',\n                                'stylers': {\n                                    'visibility': 'off'\n                                }\n                            }, {\n                                'featureType': 'boundary',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#fefefe'\n                                }\n                            }, {\n                                'featureType': 'building',\n                                'elementType': 'all',\n                                'stylers': {\n                                    'color': '#d1d1d1'\n                                }\n                            }, {\n                                'featureType': 'label',\n                                'elementType': 'labels.text.fill',\n                                'stylers': {\n                                    'color': '#999999'\n                                }\n                        }]*/\n                    }\n                },\n                 series : [\n        {\n            name: '热点值',\n            type: 'scatter',\n            coordinateSystem: 'bmap',\n            data: convertData(this.datalist),\n            symbolSize: function (val) {\n                return 12;\n            },\n            label: {\n                normal: {\n                    formatter: '{b}',\n                    position: 'right',\n                    show: false\n                },\n                emphasis: {\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    color: 'purple'\n                }\n            }\n        },\n        {\n            name: 'Top 5',\n            type: 'effectScatter',\n            coordinateSystem: 'bmap',\n            data: convertData(this.datalist.sort(function (a, b) {\n                return b.value - a.value;\n            }).slice(0, 6)),\n            symbolSize: function (val) {\n                return 20;\n            },\n            showEffectOn: 'render',\n            rippleEffect: {\n                brushType: 'stroke'\n            },\n            hoverAnimation: true,\n            label: {\n                normal: {\n                    formatter: '{b}',\n                    position: 'right',\n                    show: true\n                }\n            },\n            itemStyle: {\n                normal: {\n                    color: '#992629',\n                    shadowBlur: 10,\n                    shadowColor: '#333'\n                }\n            },\n            zlevel: 1\n        }\n    ]\n\n\n            };\n            myChart.setOption(option)\n        }\n    }\n}\n</script>\n\n<style scoped>\n.select-box{\n  position:absolute;\n  /*left:80px;*/\n  top:550px;\n}\n\n</style>\n"]}]}