{"remainingRequest":"E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!E:\\Government\\client2.0\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Government\\client2.0\\client\\src\\components\\Index.vue?vue&type=template&id=82b7485c&scoped=true&","dependencies":[{"path":"E:\\Government\\client2.0\\client\\src\\components\\Index.vue","mtime":1575539753641},{"path":"E:\\Government\\client2.0\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}