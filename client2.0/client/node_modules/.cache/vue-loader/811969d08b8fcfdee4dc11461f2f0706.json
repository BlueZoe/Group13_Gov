{"remainingRequest":"E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Government\\client2.0\\client\\src\\views\\chart3.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Government\\client2.0\\client\\src\\views\\chart3.vue","mtime":1574093797983},{"path":"E:\\Government\\client2.0\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["chart3.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"chart3.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class='total'>\r\n    <div class=\"charts\">\r\n      <br>\r\n      <br>\r\n        <div id=\"chart3\" :style=\"{width:'1170px',height:'420px'}\"></div>\r\n      </div>\r\n    <div class=\"select-box\" :style=\"{width:'1170px',height:'100px'}\">\r\n    <span>时间范围选择: &#12288</span>\r\n    <span >\r\n      <span class=\"item\" >\r\n        <select v-model=\"formData1.year1\">\r\n          <option v-for=\"item in year1\" :value=\"item\">{{item}}年</option>\r\n        </select>\r\n      </span>\r\n      <span class=\"item\" @change=\"getDay1\">\r\n        <select  v-model=\"formData1.month1\">\r\n          <option v-for=\"item in month1\" :value=\"item\">{{item}}月</option>\r\n        </select>\r\n      </span>\r\n      <span class=\"item\">\r\n        <select  v-model=\"formData1.day1\" >\r\n          <option v-for=\"item in day1\" :value=\"item\">{{item}}日</option>\r\n        </select>\r\n      </span>\r\n    </span>\r\n     <span> —— </span>\r\n<!--    <div><a class=\"btn-submit btn-submit-s\" @click=\"submit\"></a></div>-->\r\n  <span>\r\n      <span class=\"item\">\r\n        <select v-model=\"formData2.year2\">\r\n          <option v-for=\"item in year2\" :value=\"item\">{{item}}年</option>\r\n        </select>\r\n      </span>\r\n      <span class=\"item\" @change=\"getDay2\">\r\n        <select  v-model=\"formData2.month2\">\r\n          <option v-for=\"item in month2\" :value=\"item\">{{item}}月</option>\r\n        </select>\r\n      </span>\r\n      <span class=\"item\">\r\n        <select  v-model=\"formData2.day2\" >\r\n          <option v-for=\"item in day2\" :value=\"item\">{{item}}日</option>\r\n        </select>\r\n      </span>\r\n    </span>\r\n  <span>&#12288 &#12288</span>\r\n<!--    <el-botton @click=\"submit\" type=\"success\" size=\"mini\">提交</el-botton>-->\r\n    <input type='button' @click=\"getdata_chart3\" style=\"width:40px;height:20px;border-radius:15%;border: solid 1px;background: #9e9e9e\" value=\"确定\">\r\n    </div>\r\n  </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nexport default {\r\n        data(){\r\n            return{\r\n              year1:[],\r\n              month1:[],\r\n              day1:[],\r\n              formData1:{\r\n              year1:2018,\r\n              month1:10,\r\n              day1:30},\r\n              year2:[],\r\n              month2:[],\r\n              day2:[],\r\n              formData2:{\r\n              year2:2018,\r\n              month2:10,\r\n              day2:30},\r\n              datalist:[],\r\n            }},\r\n        mounted(){\r\n            this.init()\r\n            this.drawECharts()\r\n        },\r\n        methods:{\r\n            init(){\r\n              this.getYear1();\r\n              this.getMonth1();\r\n              this.getDay1();\r\n              this.getYear2();\r\n              this.getMonth2();\r\n              this.getDay2();\r\n            },\r\n              getYear1(){//获取年\r\n                let date = new Date;\r\n                let current_year = date.getFullYear();\r\n                for (let i = 0; i < 10; i++) {\r\n                  let y = current_year - i;\r\n                this.year1.push(y);\r\n                }\r\n              },\r\n              getMonth1(){//获取月\r\n                for (let i = 1; i < 13; i++) {\r\n                this.month1.push(i);\r\n                }\r\n              },\r\n              getDay1(){//获取日\r\n                this.day1 = [];\r\n                let day = this.getDaysInMonth1(this.formData1.year1, this.formData1.month1)\r\n                for (let i = 1; i <= day ; i++) {\r\n                    this.day1.push(i);\r\n                }\r\n              },\r\n\r\n              getYear2(){//获取年\r\n                let date = new Date;\r\n                let current_year = date.getFullYear();\r\n                for (let i = 0; i < 10; i++) {\r\n                  let y = current_year - i;\r\n                this.year2.push(y);\r\n                }\r\n              },\r\n              getMonth2(){//获取月\r\n                for (let i = 1; i < 13; i++) {\r\n                this.month2.push(i);\r\n                }\r\n              },\r\n              getDay2(){//获取日\r\n                this.day2 = [];\r\n                let day = this.getDaysInMonth2(this.formData2.year2, this.formData2.month2)\r\n                for (let i = 1; i <= day ; i++) {\r\n                    this.day2.push(i);\r\n                }\r\n              },\r\n              getDaysInMonth1(year, month) {//获取某个月的天数\r\n                      month = parseInt(month, 10);\r\n                let d = new Date(year, month, 0);\r\n                return d.getDate();\r\n              },\r\n              getDaysInMonth2(year, month) {//获取某个月的天数\r\n                    month = parseInt(month, 10);\r\n              let d = new Date(year, month, 0);\r\n              return d.getDate();\r\n\r\n            },\r\n              padding0(num, length) {//数字前填充0方法\r\n               for(let len = (num + \"\").length; len < length; len = num.length) {\r\n                num = \"0\" + num;\r\n               }\r\n               return num;\r\n            },\r\n                submit(){//提交\r\n            let day1 = this.formData1.year1 +\"-\" + this.padding0(this.formData1.month1,2) +\"-\" + this.padding0(this.formData1.day1,2);\r\n            let day2 = this.formData2.year2 +\"-\" + this.padding0(this.formData2.month2,2) +\"-\" + this.padding0(this.formData2.day2,2);\r\n            let cur_date = new Date();\r\n            let days;\r\n            if(new Date(day1)>new Date(day2))\r\n            {\r\n                days = [day1,day2,false];\r\n                alert(\"请选择小于今天的年月日\");\r\n                return;\r\n            }\r\n            else\r\n            {\r\n                days = [day1,day2,true];\r\n            }\r\n            console.log(day1);\r\n            return days;\r\n\r\n      console.log(day1);//birthday就是得到的最终的日期，格式为2019-01-01\r\n\r\n      },\r\n            drawECharts(){\r\n                // temp 是我们的自定义样式，上面安装Echarts时有介绍\r\n                var myChart = this.$echarts.init(document.getElementById(\"chart3\"))\r\n\r\n                var option = {}\r\n               /* var data = [\r\n                    {name: '坪山社区', value: 41},\r\n                    {name: '和平社区', value: 31},\r\n                    {name: '金沙社区', value: 41},\r\n                    {name: '南布社区', value: 64},\r\n                    {name: '田心社区', value: 41},\r\n                    {name: '碧岭社区', value: 41},\r\n                    {name: '江岭社区', value: 41},\r\n                    {name: '金龟社区', value: 41},\r\n                    {name: '汤坑社区', value: 61},\r\n                    {name: '石井社区', value: 41},\r\n                    {name: '六和社区', value: 41},\r\n                    {name: '沙湖社区', value: 41},\r\n                    {name: '老坑社区', value: 36},\r\n                    {name: '竹坑社区', value: 41},\r\n                    {name: '秀新社区', value: 41},\r\n                    {name: '沙田社区', value: 41},\r\n                    {name: '六联社区', value: 78},\r\n                    {name: '坪环社区', value: 41},\r\n                    {name: '龙田社区', value: 41},\r\n                    {name: '坑梓社区', value: 41},\r\n                    {name: '田头社区', value: 41},\r\n                    {name: '马峦社区', value: 41},\r\n                    {name: '沙坣社区', value: 41},\r\n\r\n                ];*/\r\n                let data=this.datalist;\r\n                var geoCoordMap = {\r\n                    '坪山社区':[114.352641,22.697439],\r\n                    '和平社区':[114.355104,22.697106],\r\n                    '金沙社区':[114.404081,22.758677],\r\n                    '南布社区':[114.375607,22.70534],\r\n                    '田心社区':[114.421943,22.700351],\r\n                    '碧岭社区':[114.295663,22.67342],\r\n                    '江岭社区':[114.362596,22.69202],\r\n                    '金龟社区':[114.406461,22.663744],\r\n                    '汤坑社区':[114.331079,22.678805],\r\n                    '石井社区':[113.803103,23.029933],\r\n                    '六和社区':[114.346675,22.711219],\r\n                    '沙湖社区':[114.326552,22.67909],\r\n                    '老坑社区':[114.369312,22.734866],\r\n                    '竹坑社区':[114.395074,22.715773],\r\n                    '秀新社区':[114.381223,22.746873],\r\n                    '沙田社区':[114.404444,22.761764],\r\n                    '六联社区':[114.332971,22.795219],\r\n                    '坪环社区':[114.35474,22.688096],\r\n                    '龙田社区':[114.372841,22.753346],\r\n                    '坑梓社区':[114.390013,22.753031],\r\n                    '田头社区':[114.410837,22.697197],\r\n                    '马峦社区':[114.338203,22.644538],\r\n                    '沙坣社区':[114.377888,22.690889],\r\n\r\n                };\r\n                var convertData = function (data) {\r\n                    var res = [];\r\n                    for (var i = 0; i < data.length; i++) {\r\n                        var geoCoord = geoCoordMap[data[i].name];\r\n                        if (geoCoord) {\r\n                            res.push({\r\n                                name: data[i].name,\r\n                                value: geoCoord.concat(data[i].value)\r\n                            });\r\n                        }\r\n                    }\r\n    return res;\r\n};\r\n\r\noption = {\r\n    title: {\r\n        text: '深圳龙岗热点社区地图',\r\n        // subtext: 'data from PM25.in',\r\n        // sublink: 'http://www.pm25.in',\r\n        left: '10%',\r\n        top:'10%',\r\n        textStyle:{ //设置主标题风格\r\n                      color:'#fff3ae',\r\n                      fontSize: 20,\r\n                      Height:50},//设置主标题字体颜色\r\n    },\r\n    tooltip : {\r\n        trigger: 'item'\r\n    },\r\n    geo: {\r\n          map: '深圳', // 地图类型\r\n          show: true, // 是否显示地理坐标系组件\r\n          center:[114.395074,22.715773],\r\n          // 是否开启鼠标缩放和平移漫游 默认不开启 如果只想要开启缩放或者平移，\r\n          // 可以设置成 ''scale 或者 'move' 设置成 true 为都开启\r\n          zoom: 2.2,\r\n          roam: false,\r\n          // 图形上的文本标签\r\n          label: {\r\n            show: false // 是否显示对应地名\r\n          },\r\n          // 地图区域的多边形 图形样式\r\n          itemStyle: {\r\n            areaColor: '#000000', // 地图区域的颜色\r\n            borderWidth: 0.5, // 描边线宽 为 0 时无描边\r\n            borderColor: '3B5077', // 图形的描边颜色 支持的颜色格式同 color，不支持回调函数\r\n            borderType: 'solid' // 描边类型，默认为实线，支持 'solid', 'dashed', 'dotted'\r\n          },\r\n          // 高亮状态下的多边形和标签样式\r\n          emphasis: {\r\n            areaColor: '#2B91B7',\r\n            label: {\r\n              show: true, // 是否显示标签\r\n                color: '#fff', // 文字的颜色 如果设置为 'auto'，则为视觉映射得到的颜色，如系列色\r\n            },\r\n            itemStyle: {\r\n              areaColor: '#030913' // 地图区域的颜色\r\n            }\r\n          }\r\n        },\r\n    series : [\r\n        {\r\n            name: '',\r\n            type: 'scatter',\r\n            coordinateSystem: 'geo',\r\n            data: convertData(this.datalist),\r\n            symbolSize: function (val) {\r\n                return val[2] / 5;\r\n            },\r\n            label: {\r\n                normal: {\r\n                    formatter: '{b}',\r\n                    position: 'right',\r\n                    show: false\r\n                },\r\n                emphasis: {\r\n                    show: true\r\n                }\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    color: 'purple'\r\n                }\r\n            }\r\n        },\r\n        {\r\n            name: 'Top 5',\r\n            type: 'effectScatter',\r\n            coordinateSystem: 'geo',\r\n            data: convertData(this.datalist.sort(function (a, b) {\r\n                return b.value - a.value;\r\n            }).slice(0, 6)),\r\n            symbolSize: function (val) {\r\n                return val[2] / 5;\r\n            },\r\n            showEffectOn: 'render',\r\n            rippleEffect: {\r\n                brushType: 'stroke'\r\n            },\r\n            hoverAnimation: true,\r\n            label: {\r\n                normal: {\r\n                    formatter: '{b}',\r\n                    position: 'right',\r\n                    show: true\r\n                }\r\n            },\r\n            itemStyle: {\r\n                normal: {\r\n                    color: '#992629',\r\n                    shadowBlur: 10,\r\n                    shadowColor: '#333'\r\n                }\r\n            },\r\n            zlevel: 1\r\n        }\r\n    ]\r\n}\r\n                // 执行渲染图形和数据的操作\r\n                    myChart.setOption(option)\r\n            },\r\n              getdata_chart3(){\r\n                let that = this;\r\n                let days = this.submit();\r\n                console.log(days);\r\n                if(days[2])\r\n                {\r\n                    axios.post('http://127.0.0.1:5000/api/getdata_chart3',[days[0],days[1]])\r\n                        .then(function(res){\r\n                         console.log(res);\r\n                         that.datalist = res;\r\n                         that.drawECharts();\r\n                })\r\n\r\n                    //websocket\r\n        }},\r\n        }\r\n    }\r\n</script>\r\n<style>\r\n  .total{\r\n    /*background: #d2ffe4;*/\r\n    padding: 0;\r\n    /*background-image: url(../assets/timg.jpg);*/\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    background-color: #152a3e;\r\n    color:#ffffff;\r\n    position: center;\r\n  }\r\n</style>\r\n"]}]}