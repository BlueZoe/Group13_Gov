{"remainingRequest":"E:\\Government\\client2.0\\client\\node_modules\\babel-loader\\lib\\index.js!E:\\Government\\client2.0\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\Government\\client2.0\\client\\src\\components\\vue-img-verify.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\Government\\client2.0\\client\\src\\components\\vue-img-verify.vue","mtime":1574689958866},{"path":"E:\\Government\\client2.0\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\Government\\client2.0\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnBhcnNlLWludCI7Ci8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9vbDogJ0FCQ0RFRkdISUpLTE1OT1BRUlNUVVZXWFlaMTIzNDU2Nzg5MCcsCiAgICAgIC8vIOWtl+espuS4sgogICAgICB3aWR0aDogMTIwLAogICAgICBoZWlnaHQ6IDQwLAogICAgICBpbWdDb2RlOiAnJwogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyDnu5jliLblm77niYfpqozor4HnoIEKICAgIHRoaXMuJGVtaXQoJ2dldEltZ0NvZGUnLCB0aGlzLmRyYXcoKSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyDngrnlh7vlm77niYfph43mlrDnu5jliLYKICAgIGhhbmRsZURyYXc6IGZ1bmN0aW9uIGhhbmRsZURyYXcoKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2dldEltZ0NvZGUnLCB0aGlzLmRyYXcoKSk7CiAgICB9LAogICAgLy8gMS7pmo/mnLrmlbAKICAgIHJhbmRvbU51bTogZnVuY3Rpb24gcmFuZG9tTnVtKG1pbiwgbWF4KSB7CiAgICAgIHJldHVybiBwYXJzZUludChNYXRoLnJhbmRvbSgpICogKG1heCAtIG1pbikgKyBtaW4pOwogICAgfSwKICAgIC8vIDIu6ZqP5py66aKc6ImyCiAgICByYW5kb21Db2xvcjogZnVuY3Rpb24gcmFuZG9tQ29sb3IobWluLCBtYXgpIHsKICAgICAgdmFyIHIgPSB0aGlzLnJhbmRvbU51bShtaW4sIG1heCk7CiAgICAgIHZhciBnID0gdGhpcy5yYW5kb21OdW0obWluLCBtYXgpOwogICAgICB2YXIgYiA9IHRoaXMucmFuZG9tTnVtKG1pbiwgbWF4KTsKICAgICAgcmV0dXJuICJyZ2IoIi5jb25jYXQociwgIiwiKS5jb25jYXQoZywgIiwiKS5jb25jYXQoYiwgIikiKTsKICAgIH0sCiAgICAvLyDnu5jliLblm77niYcKICAgIGRyYXc6IGZ1bmN0aW9uIGRyYXcoKSB7CiAgICAgIC8vIDMu5aGr5YWF6IOM5pmv6aKc6Imy77yM6IOM5pmv6aKc6Imy6KaB5rWF5LiA54K5CiAgICAgIHZhciBjdHggPSB0aGlzLiRyZWZzLnZlcmlmeS5nZXRDb250ZXh0KCcyZCcpOyAvLyDloavlhYXpopzoibIKCiAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKDE4MCwgMjMwKTsgLy8g5aGr5YWF55qE5L2N572uCgogICAgICBjdHguZmlsbFJlY3QoMCwgMCwgdGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpOyAvLyDlrprkuYlwYXJhbVRleHQKCiAgICAgIHZhciBpbWdDb2RlID0gJyc7IC8vIDQu6ZqP5py65Lqn55Sf5a2X56ym5Liy77yM5bm25LiU6ZqP5py65peL6L2sCgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IDQ7IGkrKykgewogICAgICAgIC8vIOmaj+acuueahOWbm+S4quWtlwogICAgICAgIHZhciB0ZXh0ID0gdGhpcy5wb29sW3RoaXMucmFuZG9tTnVtKDAsIHRoaXMucG9vbC5sZW5ndGgpXTsKICAgICAgICBpbWdDb2RlICs9IHRleHQ7IC8vIOmaj+acuueahOWtl+S9k+Wkp+WwjwoKICAgICAgICB2YXIgZm9udFNpemUgPSB0aGlzLnJhbmRvbU51bSgxOCwgNDApOyAvLyDlrZfkvZPpmo/mnLrnmoTml4vovazop5LluqYKCiAgICAgICAgdmFyIGRlZyA9IHRoaXMucmFuZG9tTnVtKC0zMCwgMzApOwogICAgICAgIC8qCiAgICAgICAgICog57uY5Yi25paH5a2X5bm26K6p5Zub5Liq5paH5a2X5Zyo5LiN5ZCM55qE5L2N572u5pi+56S655qE5oCd6LevIDoKICAgICAgICAgKiAx44CB5a6a5LmJ5a2X5L2TCiAgICAgICAgICogMuOAgeWumuS5ieWvuem9kOaWueW8jwogICAgICAgICAqIDPjgIHloavlhYXkuI3lkIznmoTpopzoibIKICAgICAgICAgKiA044CB5L+d5a2Y5b2T5YmN55qE54q25oCB77yI5Lul6Ziy5q2i5Lul5LiK55qE54q25oCB5Y+X5b2x5ZON77yJCiAgICAgICAgICogNeOAgeW5s+enu3RyYW5zbGF0ZSgpCiAgICAgICAgICogNuOAgeaXi+i9rCByb3RhdGUoKQogICAgICAgICAqIDfjgIHloavlhYXmloflrZcKICAgICAgICAgKiA444CBcmVzdG9yZeWHuuagiAogICAgICAgICAqICovCgogICAgICAgIGN0eC5mb250ID0gZm9udFNpemUgKyAncHggU2ltaGVpJzsKICAgICAgICBjdHgudGV4dEJhc2VsaW5lID0gJ3RvcCc7CiAgICAgICAgY3R4LmZpbGxTdHlsZSA9IHRoaXMucmFuZG9tQ29sb3IoODAsIDE1MCk7CiAgICAgICAgLyoKICAgICAgICAgKiBzYXZlKCkg5pa55rOV5oqK5b2T5YmN54q25oCB55qE5LiA5Lu95ou36LSd5Y6L5YWl5Yiw5LiA5Liq5L+d5a2Y5Zu+5YOP54q25oCB55qE5qCI5Lit44CCCiAgICAgICAgICog6L+Z5bCx5YWB6K645oKo5Li05pe25Zyw5pS55Y+Y5Zu+5YOP54q25oCB77yMCiAgICAgICAgICog54S25ZCO77yM6YCa6L+H6LCD55SoIHJlc3RvcmUoKSDmnaXmgaLlpI3ku6XliY3nmoTlgLzjgIIKICAgICAgICAgKiBzYXZl5piv5YWl5qCI77yMcmVzdG9yZeaYr+WHuuagiOOAggogICAgICAgICAqIOeUqOadpeS/neWtmENhbnZhc+eahOeKtuaAgeOAgnNhdmXkuYvlkI7vvIzlj6/ku6XosIPnlKhDYW52YXPnmoTlubPnp7vjgIHmlL7nvKnjgIHml4vovazjgIHplJnliIfjgIHoo4HliarnrYnmk43kvZzjgIIgcmVzdG9yZe+8mueUqOadpeaBouWkjUNhbnZhc+S5i+WJjeS/neWtmOeahOeKtuaAgeOAgumYsuatonNhdmXlkI7lr7lDYW52YXPmiafooYznmoTmk43kvZzlr7nlkI7nu63nmoTnu5jliLbmnInlvbHlk43jgIIKICAgICAgICAgKgogICAgICAgICAqICovCgogICAgICAgIGN0eC5zYXZlKCk7CiAgICAgICAgY3R4LnRyYW5zbGF0ZSgzMCAqIGkgKyAxNSwgMTUpOwogICAgICAgIGN0eC5yb3RhdGUoZGVnICogTWF0aC5QSSAvIDE4MCk7IC8vIGZpbGxUZXh0KCkg5pa55rOV5Zyo55S75biD5LiK57uY5Yi25aGr6Imy55qE5paH5pys44CC5paH5pys55qE6buY6K6k6aKc6Imy5piv6buR6Imy44CCCiAgICAgICAgLy8g6K+35L2/55SoIGZvbnQg5bGe5oCn5p2l5a6a5LmJ5a2X5L2T5ZKM5a2X5Y+377yM5bm25L2/55SoIGZpbGxTdHlsZSDlsZ7mgKfku6Xlj6bkuIDnp43popzoibIv5riQ5Y+Y5p2l5riy5p+T5paH5pys44CCCiAgICAgICAgLy8gY29udGV4dC5maWxsVGV4dCh0ZXh0LHgseSxtYXhXaWR0aCk7CgogICAgICAgIGN0eC5maWxsVGV4dCh0ZXh0LCAtMTUgKyA1LCAtMTUpOwogICAgICAgIGN0eC5yZXN0b3JlKCk7CiAgICAgIH0gLy8gNS7pmo/mnLrkuqfnlJ815p2h5bmy5omw57q/LOW5suaJsOe6v+eahOminOiJsuimgea1heS4gOeCuQoKCiAgICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCA1OyBfaSsrKSB7CiAgICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICAgIGN0eC5tb3ZlVG8odGhpcy5yYW5kb21OdW0oMCwgdGhpcy53aWR0aCksIHRoaXMucmFuZG9tTnVtKDAsIHRoaXMuaGVpZ2h0KSk7CiAgICAgICAgY3R4LmxpbmVUbyh0aGlzLnJhbmRvbU51bSgwLCB0aGlzLndpZHRoKSwgdGhpcy5yYW5kb21OdW0oMCwgdGhpcy5oZWlnaHQpKTsKICAgICAgICBjdHguc3Ryb2tlU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKDE4MCwgMjMwKTsKICAgICAgICBjdHguY2xvc2VQYXRoKCk7CiAgICAgICAgY3R4LnN0cm9rZSgpOwogICAgICB9IC8vIDYu6ZqP5py65Lqn55SfNDDkuKrlubLmibDnmoTlsI/ngrkKCgogICAgICBmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCA0MDsgX2kyKyspIHsKICAgICAgICBjdHguYmVnaW5QYXRoKCk7CiAgICAgICAgY3R4LmFyYyh0aGlzLnJhbmRvbU51bSgwLCB0aGlzLndpZHRoKSwgdGhpcy5yYW5kb21OdW0oMCwgdGhpcy5oZWlnaHQpLCAxLCAwLCAyICogTWF0aC5QSSk7CiAgICAgICAgY3R4LmNsb3NlUGF0aCgpOwogICAgICAgIGN0eC5maWxsU3R5bGUgPSB0aGlzLnJhbmRvbUNvbG9yKDE1MCwgMjAwKTsKICAgICAgICBjdHguZmlsbCgpOwogICAgICB9CgogICAgICByZXR1cm4gaW1nQ29kZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["vue-img-verify.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"img-verify\">\n    <canvas ref=\"verify\" :width=\"width\" :height=\"height\" @click=\"handleDraw\"></canvas>\n  </div>\n</template>\n\n<script type=\"text/ecmascript-6\">\nexport default {\n  data() {\n    return {\n      pool: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890', // 字符串\n      width: 120,\n      height: 40,\n      imgCode: ''\n    }\n  },\n  mounted() {\n    // 绘制图片验证码\n      this.$emit('getImgCode', this.draw())\n  },\n  methods: {\n    // 点击图片重新绘制\n    handleDraw() {\n      this.$emit('getImgCode', this.draw())\n    },\n\n    // 1.随机数\n    randomNum(min, max) {\n      return parseInt(Math.random() * (max - min) + min)\n    },\n    // 2.随机颜色\n    randomColor(min, max) {\n      const r = this.randomNum(min, max)\n      const g = this.randomNum(min, max)\n      const b = this.randomNum(min, max)\n      return `rgb(${r},${g},${b})`\n    },\n    // 绘制图片\n    draw() {\n      // 3.填充背景颜色，背景颜色要浅一点\n      const ctx = this.$refs.verify.getContext('2d')\n      // 填充颜色\n      ctx.fillStyle = this.randomColor(180, 230)\n      // 填充的位置\n      ctx.fillRect(0, 0, this.width, this.height)\n      // 定义paramText\n      let imgCode = ''\n      // 4.随机产生字符串，并且随机旋转\n      for (let i = 0; i < 4; i++) {\n        // 随机的四个字\n        const text = this.pool[this.randomNum(0, this.pool.length)]\n        imgCode += text\n        // 随机的字体大小\n        const fontSize = this.randomNum(18, 40)\n        // 字体随机的旋转角度\n        const deg = this.randomNum(-30, 30)\n        /*\n         * 绘制文字并让四个文字在不同的位置显示的思路 :\n         * 1、定义字体\n         * 2、定义对齐方式\n         * 3、填充不同的颜色\n         * 4、保存当前的状态（以防止以上的状态受影响）\n         * 5、平移translate()\n         * 6、旋转 rotate()\n         * 7、填充文字\n         * 8、restore出栈\n         * */\n        ctx.font = fontSize + 'px Simhei'\n        ctx.textBaseline = 'top'\n        ctx.fillStyle = this.randomColor(80, 150)\n        /*\n         * save() 方法把当前状态的一份拷贝压入到一个保存图像状态的栈中。\n         * 这就允许您临时地改变图像状态，\n         * 然后，通过调用 restore() 来恢复以前的值。\n         * save是入栈，restore是出栈。\n         * 用来保存Canvas的状态。save之后，可以调用Canvas的平移、放缩、旋转、错切、裁剪等操作。 restore：用来恢复Canvas之前保存的状态。防止save后对Canvas执行的操作对后续的绘制有影响。\n         *\n         * */\n        ctx.save()\n        ctx.translate(30 * i + 15, 15)\n        ctx.rotate((deg * Math.PI) / 180)\n        // fillText() 方法在画布上绘制填色的文本。文本的默认颜色是黑色。\n        // 请使用 font 属性来定义字体和字号，并使用 fillStyle 属性以另一种颜色/渐变来渲染文本。\n        // context.fillText(text,x,y,maxWidth);\n        ctx.fillText(text, -15 + 5, -15)\n        ctx.restore()\n      }\n      // 5.随机产生5条干扰线,干扰线的颜色要浅一点\n      for (let i = 0; i < 5; i++) {\n        ctx.beginPath()\n        ctx.moveTo(this.randomNum(0, this.width), this.randomNum(0, this.height))\n        ctx.lineTo(this.randomNum(0, this.width), this.randomNum(0, this.height))\n        ctx.strokeStyle = this.randomColor(180, 230)\n        ctx.closePath()\n        ctx.stroke()\n      }\n      // 6.随机产生40个干扰的小点\n      for (let i = 0; i < 40; i++) {\n        ctx.beginPath()\n        ctx.arc(this.randomNum(0, this.width), this.randomNum(0, this.height), 1, 0, 2 * Math.PI)\n        ctx.closePath()\n        ctx.fillStyle = this.randomColor(150, 200)\n        ctx.fill()\n      }\n      return imgCode\n    }\n  }\n}\n</script>\n<style type=\"text/css\">\n.img-verify canvas {\n  cursor: pointer;\n}\n</style>\n"],"sourceRoot":"src/components"}]}